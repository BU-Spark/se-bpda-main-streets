{"ast":null,"code":"var _jsxFileName = \"/Users/kamilauranayeva/CS501/se-bpda-main-streets/dev-app/src/Components/SpendingLineGraph.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ReferenceLine } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph(data, x_axis, y_axis) {\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 700,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      type: \"category\",\n      dataKey: x_axis,\n      interval: 10,\n      label: {\n        value: 'Dates',\n        position: 'bottom'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      type: \"number\",\n      tickFormatter: function tickFormatter(tick) {\n        return \"\".concat(tick, \"%\");\n      },\n      domain: [-70, 'dataMax'],\n      tickCount: 30,\n      label: {\n        value: 'Spending',\n        position: 'left',\n        angle: -90\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n      y: 0,\n      stroke: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      dataKey: y_axis,\n      stroke: \"#82ca9d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/kamilauranayeva/CS501/se-bpda-main-streets/dev-app/src/Components/SpendingLineGraph.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ReferenceLine","LineGraph","data","x_axis","y_axis","top","right","left","bottom","value","position","tick","angle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,aAAvC,EAAsDC,OAAtD,EAA+DC,MAA/D,EAAuEC,mBAAvE,EAA4FC,aAA5F,QAAiH,UAAjH;;;AAGA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyC;AACrC,sBACI,QAAC,SAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,MAAM,EAAE;AACNG,MAAAA,GAAG,EAAE,CADC;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,MAAM,EAAE;AAJF,KAJV;AAAA,4BAYE,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAGL,MAAjC;AAAyC,MAAA,QAAQ,EAAE,EAAnD;AAAuD,MAAA,KAAK,EAAE;AAACM,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,QAAQ,EAAE;AAA3B;AAA9D;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,aAAa,EAAE,uBAAAC,IAAI;AAAA,yBAAOA,IAAP;AAAA,OAAxC;AAAyD,MAAA,MAAM,EAAE,CAAC,CAAC,EAAF,EAAM,SAAN,CAAjE;AAAmF,MAAA,SAAS,EAAE,EAA9F;AAAkG,MAAA,KAAK,EAAE;AAACF,QAAAA,KAAK,EAAE,UAAR;AAAoBC,QAAAA,QAAQ,EAAE,MAA9B;AAAsCE,QAAAA,KAAK,EAAC,CAAC;AAA7C;AAAzG;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,QAAC,aAAD;AAAe,MAAA,CAAC,EAAI,CAApB;AAAuB,MAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAER,MAAf;AAAuB,MAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;KAtBQH,S;AAuBT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ReferenceLine } from 'recharts';\n\n\nfunction LineGraph(data, x_axis, y_axis) {\n    return (\n        <LineChart\n          width={700}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 20,\n          }}\n        >\n          {/* tickCount={20} */}\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis type=\"category\" dataKey ={x_axis} interval={10} label={{value: 'Dates', position: 'bottom'}}/>\n          <YAxis type=\"number\" tickFormatter={tick => `${tick}%` } domain={[-70, 'dataMax']} tickCount={30} label={{value: 'Spending', position: 'left', angle:-90}}/>\n          <ReferenceLine y = {0} stroke=\"black\"/> \n          <Tooltip />\n          <Line dataKey={y_axis} stroke=\"#82ca9d\" />\n        </LineChart>\n    );\n}\nexport default LineGraph;"]},"metadata":{},"sourceType":"module"}