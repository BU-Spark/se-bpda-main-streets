{"ast":null,"code":"var _jsxFileName = \"/Users/kamilauranayeva/CS501/se-bpda-main-streets/dev-app/src/Components/Map.js\";\nimport React from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, GeoJSON, FeatureGroup, Popup, Polygon } from 'react-leaflet';\nimport streets from './Main_Street_Districts.json';\nimport boston from './Boston_Boundary.json';\nimport './Map.css';\n\nfunction Map() {\n  var _this = this;\n\n  var districtStyle = {\n    color: \"red\",\n    fillColor: \"red\",\n    fillOpacity: .5,\n    clickable: true\n  };\n  var bostonStyle = {\n    color: \"black\",\n    fillOpacity: 0\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MapContainer, {\n    center: [42.315, -71.09],\n    zoom: 11.5,\n    scrollWheelZoom: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GeoJSON, {\n    style: bostonStyle,\n    data: boston,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), streets.features.map(function (item) {\n    return /*#__PURE__*/React.createElement(FeatureGroup, {\n      pathOptions: districtStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Mainstreet: \", item.properties.NAME, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 53\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      href: item.properties.URL,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 59\n      }\n    }, \"Click for more info\")), /*#__PURE__*/React.createElement(Polygon, {\n      positions: item.geometry.coordinates.map(function (lst) {\n        return lst.map(function (coord) {\n          return [coord[1], coord[0]];\n        });\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  })));\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/kamilauranayeva/CS501/se-bpda-main-streets/dev-app/src/Components/Map.js"],"names":["React","MapContainer","TileLayer","GeoJSON","FeatureGroup","Popup","Polygon","streets","boston","Map","districtStyle","color","fillColor","fillOpacity","clickable","bostonStyle","features","map","item","properties","NAME","URL","geometry","coordinates","lst","coord"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,SAAQC,YAAR,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,YAA1C,EAAwDC,KAAxD,EAA+DC,OAA/D,QAA6E,eAA7E;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,MAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,KADa;AAEpBC,IAAAA,SAAS,EAAE,KAFS;AAGpBC,IAAAA,WAAW,EAAE,EAHO;AAIpBC,IAAAA,SAAS,EAAE;AAJS,GAAtB;AAOA,MAAMC,WAAW,GAAG;AAClBJ,IAAAA,KAAK,EAAE,OADW;AAElBE,IAAAA,WAAW,EAAE;AAFK,GAApB;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAE,CAAC,MAAD,EAAS,CAAC,KAAV,CADV;AAEE,IAAA,IAAI,EAAE,IAFR;AAGE,IAAA,eAAe,EAAE,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,0EADd;AAEE,IAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAQE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEE,WAAhB;AAA6B,IAAA,IAAI,EAAEP,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASGD,OAAO,CAACS,QAAR,CAAiBC,GAAjB,CAAqB,UAACC,IAAD;AAAA,wBACpB,oBAAC,YAAD;AAAc,MAAA,WAAW,EAAER,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoBQ,IAAI,CAACC,UAAL,CAAgBC,IAApC,oBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1C,oBAAgD;AAAG,MAAA,IAAI,EAAEF,IAAI,CAACC,UAAL,CAAgBE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAhD,CADA,eAEE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEH,IAAI,CAACI,QAAL,CAAcC,WAAd,CAA0BN,GAA1B,CAA8B,UAAAO,GAAG;AAAA,eAAIA,GAAG,CAACP,GAAJ,CAAQ,UAAAQ,KAAK;AAAA,iBAAI,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAJ;AAAA,SAAb,CAAJ;AAAA,OAAjC,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADoB;AAAA,GAArB,CATH,CADF,CADF;AAoBD;;AAED,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport {MapContainer, TileLayer, GeoJSON, FeatureGroup, Popup, Polygon} from 'react-leaflet';\nimport streets from './Main_Street_Districts.json';\nimport boston from './Boston_Boundary.json'\nimport './Map.css'\n\nfunction Map() {\n\n  const districtStyle = {\n    color: \"red\",\n    fillColor: \"red\",\n    fillOpacity: .5,\n    clickable: true,\n  }\n\n  const bostonStyle = {\n    color: \"black\",\n    fillOpacity: 0,\n  }\n\n  return (\n    <div>\n      <MapContainer\n        center={[42.315, -71.09]}\n        zoom={11.5}\n        scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <GeoJSON style={bostonStyle} data={boston} />\n        {streets.features.map((item) => \n          <FeatureGroup pathOptions={districtStyle}>\n          <Popup>Mainstreet: {item.properties.NAME} <br/> <a href={item.properties.URL} >Click for more info</a></Popup>\n            <Polygon positions={item.geometry.coordinates.map(lst => lst.map(coord => [coord[1], coord[0]]))} />\n          </FeatureGroup>\n          )}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}